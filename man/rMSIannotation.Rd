% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotation.R
\name{rMSIannotation}
\alias{rMSIannotation}
\title{rMSIannotation}
\usage{
rMSIannotation(
  PeakMtx,
  iso.number = 2,
  iso.tolerance = 30,
  iso.charge = 1,
  iso.scoreThreshold = 0.75,
  iso.toleranceUnits = "ppm",
  iso.imageVector = NULL,
  addu.tolerance = 50,
  addu.adducts = data.frame(name = c("+K", "+Na", "+H"), mass = c(38.963706, 22.98976,
    1.007825), priority = c(0, 0, 0)),
  csv.results = FALSE,
  csv.path = getwd()
)
}
\arguments{
\item{PeakMtx}{List. An rMSIprocPeakMatrix. Must contain at least the following categories: \itemize{
\item PeakMtx$intensity. A matrix containing the intensities of the peaks for each pixel (rows = pixels, cols = ions).  
\item PeakMtx$mass. A vector containing the masses of each peak. Must be in the same order with the columns of the intensity marix.   
\item PeakMtx$numPixels. Number of pixels (rows in your matrix).   
}}

\item{iso.number}{Integer. Number of isotopes for each monoisotopic ion to be found.}

\item{iso.tolerance}{Integer. Mass tolerance for the distance between isotope candidates in scans or ppms. (1.003355 Da +/- iso.tolerance)}

\item{iso.charge}{Integer. Charge of the patterns to be found.}

\item{iso.scoreThreshold}{Numeric between 0 and 1. ILS value to consider a pair of ions isotopes.}

\item{iso.toleranceUnits}{String. The units of iso.tolerance. Must be 'ppm' or 'scan'. If ToleranceUnits is 'scan' then ImageVector must be the mass channels vector of the rMSI image (rMSIObj$mass).}

\item{iso.imageVector}{Numeric Vector. The mass channels vector of the imaging dataset containing all the scans.}

\item{addu.tolerance}{Integer. Mass error tolerance in ppm.}

\item{csv.results}{Boolean. If TRUE, the annotations will be written in CSV files under the name A.csv, B.csv and C.csv. By default FALSE.}

\item{csv.path}{Path. Path to the folder where the CSV files should be stored. By default the working directory.}

\item{addu.adductDataFrame}{Data frame containing the adducts to be searched. By defalut (+H, +Na and +K). It must have three columns.\itemize{
\item $name. Column containing the names and sign, as strings, of the elements or molecules that form adducts  (i.e. "+Na", "+K", "-H+2Na") 
\item $mass. Masses of the adduct forming elements.
\item $priority. Integers. Priority of formation during the ionization. In case of multiple adduct assignation, priority will be considered to disambiguate. Highest priority is 0. 
}}
}
\value{
List. 
\itemize{
  \item $A: Data frame of the pairs of M+0 ions cataloged as adducts.
  \item $B: Data frame of the pairs of M+0 ions and non-isotopic ions cataloged as adducts.
  \item $C: Data frame of the all the M+0 ions.
  \item $isotopicPatterns: List with all the isotopic patterns found. The name of each list refers to the monoisotopic ion. 
  \item $isotopicTestData: All the test results computed to determine the monoisotopic ions.
  \item $adductAssignation: Table with all the monoisotopic peaks annotated with the adduct assignation if any. Multiple adduct assignation is possible.
  \item $monoisotopicPeaks: Peak matrix column indexes of monoisotopic peaks. 
  \item $isotopicPeaks: Peak matrix column indexes of isotopic peaks.
}
}
\description{
Searches for isotopic ions in the peak matrix and evaluates them using morphology, intensity and mass error criteria.
This algorithm only searches carbon-based isotopic ions.
Using the information generated by the isotopes test, the algorithm then proceeds to search adduct pairs between the monoisotopic ions.
}
\details{
Additional information can be found on paper:
rMSIannotation: A peak annotation tool for mass spectrometry imaging based on the analysis of isotopic intensity ratios
Lluc Sementé, Gerard Baquer, María García-Altares, Xavier Correig-Blanchar, Pere Ràfols. /n
DOI: https://doi.org/10.1016/j.aca.2021.338669
}
\examples{
 
First you need to load a peak matrix
pks <- rMSIproc::LoadPeakMatrix("path/to/matrix.zip")

Generate the annotation results with the default parameters
annResults <- rMSIproc::rMSIannotation(pks)

}
